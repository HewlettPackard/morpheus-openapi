description: |
  Web check type allows you to perform a standard web request and validate the response came back successfully.
  Additionally, you can check for matching text within the result.
type: object
properties:
  name:
    type: string
    description: Unique name scoped to your account for the check
    example: My Check
  description:
    type: string
    description: Optional description field
    example: This is my awesome check
  checkType:
    type: object
    description: Check type you want to create
    properties:
      code:
        type: string
        enum:
          - pushCheck
  checkInterval:
    type: integer
    description: Number of seconds you want between check executions (minimum value is 60, depending on your subscription plan)
    default: 300
  inUptime:
    type: boolean
    description: Used to determine if check should affect account wide availability calculations
    default: true
  active:
    type: boolean
    description: Used to determine if check should be scheduled to execute
    default: true
  severity:
    type: string
    description: Severity level threshold for sending notifications.
    default: critical
    enum:
      - info
      - warning
      - critical
  config:
    type: object
    required:
      - webMethod
      - webUrl
    properties:
      webMethod:
        type: string
        description: HTTP method to use for testing
        enum:
          - GET
          - POST
      webUrl:
        type: string
        description: Web URL you wish to use to run a check on
        example: 'https://google.com'
      checkUser:
        type: string
        description: If you want to use HTTP Basic Authentication, populate this field with the username
        example: basicUser
      checkPassword:
        type: string
        description: If you want to use HTTP basic Authentication, populate this field with the password
        example: basicPassword
      textCheckOn:
        type: boolean
        description: Set value to `on` if you want to turn on text matching
        example: on
      webTextMatch:
        type: string
        description: Set the string you want to look for in the page source
        example: Login
      tunnelOn:
        type: string
        description: Turn `on` to enable checks through a proxy host
        default: "off"
    oneOf:
    - $ref: checkSsh.yaml
    discriminator:
      propertyName: tunnelOn
      mapping:
        off: checkSsh.yaml