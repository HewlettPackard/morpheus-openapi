{
  "success": true,
  "msg": null,
  "errors": null,
  "errorCode": null,
  "inProgress": false,
  "blueprint": {
    "id": 449,
    "name": "Sock Shop Test",
    "type": "kubernetes",
    "description": null,
    "category": null,
    "config": {
      "kubernetes": {
        "git": {
          "keyPairId": null
        },
        "configType": "yaml",
        "yaml": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: carts-db\n  labels:\n    name: carts-db\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts-db\n  template:\n    metadata:\n      labels:\n        name: carts-db\n    spec:\n      containers:\n       - name: carts-db\n         image: centos/mongodb-34-centos7\n         ports:\n         - name: mongo\n           containerPort: 27017\n         env:\n         - name: MONGODB_USER\n           value: sock-user\n         - name: MONGODB_PASSWORD\n           value: password\n         - name: MONGODB_DATABASE\n           value: data\n         - name: MONGODB_ADMIN_PASSWORD\n           value: admin\n         volumeMounts:\n         - mountPath: /tmp\n           name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n    nodeSelector:\n      beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: carts-db\n  labels:\n    name: carts-db\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: carts-db\n--- \napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: carts\n  labels:\n    name: carts\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts\n  template:\n    metadata:\n      labels:\n        name: carts\n    spec:\n      containers:\n      - name: carts\n        image: weaveworksdemos/carts:0.4.8\n        ports:\n          - containerPort: 80\n        #startupProbe:\n        #  httpGet:\n        #    path: /\n        #    port: 80\n        #  failureThreshold: 30\n        #  periodSeconds: 10\n        env:\n          - name: ZIPKIN\n            value: zipkin\n          - name: JAVA_OPTS\n            value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n          - name: db\n            value: sock-user:password@carts-db\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: carts\n  labels:\n    name: carts\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: carts\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalogue-db\n  labels:\n    name: catalogue-db\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue-db\n  template:\n    metadata:\n      labels:\n        name: catalogue-db\n    spec:\n      containers:\n      - name: catalogue-db\n        image: mosuke5/sockshop-catalogue-db@sha256:e9c9192a81991ab1acf2dcc5819f0b0eb513d04e80fa21ae1b869bc5ba810c40\n        env:\n          - name: MYSQL_USER\n            value: catalogue_user\n          - name: MYSQL_PASSWORD\n            value: default_password\n          - name: MYSQL_DATABASE\n            value: socksdb\n          - name: MYSQL_ROOT_PASSWORD\n            value: fake_password\n          - name: MYSQL_OPERATIONS_USER\n            value: opuser\n          - name: MYSQL_OPERATIONS_PASSWORD\n            value: opuser_password\n        ports:\n        - name: mysql\n          containerPort: 3306\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: catalogue-db\n  labels:\n    name: catalogue-db\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 3306\n    targetPort: 3306\n  selector:\n    name: catalogue-db\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalogue\n  labels:\n    name: catalogue\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue\n  template:\n    metadata:\n      labels:\n        name: catalogue\n    spec:\n      containers:\n      - name: catalogue\n        image: mosuke5/sockshop-catalogue:a04de03\n        #image: weaveworksdemos/catalogue:0.3.5\n        #env:\n        #- name: ZIPKIN\n        #  value: http://zipkin:9411/api/v1/spans\n        ports:\n        - containerPort: 80\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: catalogue\n  labels:\n    name: catalogue\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: catalogue\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: front-end\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: front-end\n  template:\n    metadata:\n      labels:\n        name: front-end\n        version: v1\n    spec:\n      containers:\n      - name: front-end\n        image: mosuke5/front-end:master-7ad6254\n        ports:\n        - containerPort: 8079\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: front-end\n  labels:\n    name: front-end\nspec:\n  type: ClusterIP\n  ports:\n    - name: web\n      port: 80\n      targetPort: 8079\n      protocol: TCP\n  selector:\n    name: front-end\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders-db\n  labels:\n    name: orders-db\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders-db\n  template:\n    metadata:\n      labels:\n        name: orders-db\n    spec:\n      containers:\n      - name: orders-db\n        image: centos/mongodb-34-centos7\n        ports:\n        - name: mongo\n          containerPort: 27017\n        env:\n        - name: MONGODB_USER\n          value: sock-user\n        - name: MONGODB_PASSWORD\n          value: password\n        - name: MONGODB_DATABASE\n          value: data\n        - name: MONGODB_ADMIN_PASSWORD\n          value: admin\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: orders-db\n  labels:\n    name: orders-db\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: orders-db\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders\n  labels:\n    name: orders\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders\n  template:\n    metadata:\n      labels:\n        name: orders\n    spec:\n      containers:\n      - name: orders\n        image: weaveworksdemos/orders:0.4.7\n        env:\n          - name: ZIPKIN\n            value: zipkin\n          - name: JAVA_OPTS\n            value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n          - name: db\n            value: sock-user:password@orders-db\n        ports:\n        - containerPort: 80\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: orders\n  labels:\n    name: orders\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: orders\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: payment\n  labels:\n    name: payment\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: payment\n  template:\n    metadata:\n      labels:\n        name: payment\n    spec:\n      containers:\n      - name: payment\n        image: weaveworksdemos/payment:0.4.3\n        env:\n        - name: ZIPKIN\n          value: http://zipkin:9411/api/v1/spans\n        ports:\n        - containerPort: 80\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: payment\n  labels:\n    name: payment\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: payment\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: queue-master\n  labels:\n    name: queue-master\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: queue-master\n  template:\n    metadata:\n      labels:\n        name: queue-master\n    spec:\n      containers:\n      - name: queue-master\n        image: weaveworksdemos/queue-master:0.3.1\n        ports:\n        - containerPort: 80\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: queue-master\n  labels:\n    name: queue-master\n  annotations:\n    prometheus.io/path: \"/prometheus\"\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: queue-master\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\n  labels:\n    name: rabbitmq\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: rabbitmq\n  template:\n    metadata:\n      labels:\n        name: rabbitmq\n    spec:\n      containers:\n      - name: rabbitmq\n        image: rabbitmq:3.6.8\n        ports:\n        - containerPort: 5672\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\n  labels:\n    name: rabbitmq\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 5672\n    targetPort: 5672\n    name: \"amq\"\n  - port: 4369\n    name: \"epmd\"\n  selector:\n    name: rabbitmq\n---   \napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: shipping\n  labels:\n    name: shipping\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: shipping\n  template:\n    metadata:\n      labels:\n        name: shipping\n    spec:\n      containers:\n      - name: shipping\n        image: weaveworksdemos/shipping:0.4.8\n        env:\n         - name: ZIPKIN\n           value: zipkin\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n        ports:\n        - containerPort: 80\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---             \napiVersion: v1\nkind: Service\nmetadata:\n  name: shipping\n  labels:\n    name: shipping\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: shipping\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: user-db\n  labels:\n    name: user-db\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user-db\n  template:\n    metadata:\n      labels:\n        name: user-db\n    spec:\n      containers:\n      - name: user-db\n        image: mosuke5/sockshop-user-db@sha256:7633a123fe2a1e6191fd37cad6d4f07bfb2acdc3a634e27c226df3ae21357da0\n        #image: centos/mongodb-34-centos7\n        ports:\n        - name: mongo\n          containerPort: 27017\n        env:\n        - name: MONGODB_USER\n          value: sock-user\n        - name: MONGODB_PASSWORD\n          value: password\n        - name: MONGODB_DATABASE\n          value: users\n        - name: MONGODB_ADMIN_PASSWORD\n          value: admin\n        - name: MONGODB_BACKUP_USER\n          value: bkuser\n        - name: MONGODB_BACKUP_PASSWORD\n          value: password\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: user-db\n  labels:\n    name: user-db\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: user-db\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: user\n  labels:\n    name: user\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user\n  template:\n    metadata:\n      labels:\n        name: user\n    spec:\n      containers:\n      - name: user\n        image: weaveworksdemos/user:0.4.7\n        ports:\n        - containerPort: 80\n        env:\n        - name: MONGO_USER\n          value: sock-user\n        - name: MONGO_PASS\n          value: password\n        - name: MONGO_HOST\n          value: user-db:27017\n        - name: ZIPKIN\n          value: http://zipkin:9411/api/v1/spans\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: user\n  labels:\n    name: user\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: user"
      },
      "image": "/assets/apps/template.png",
      "edited": false,
      "name": "Sock Shop Test",
      "type": "kubernetes"
    },
    "visibility": "private",
    "resourcePermission": null,
    "owner": {
      "id": 287,
      "username": "Test User"
    },
    "tenant": {
      "id": 3,
      "name": "Morpheus"
    }
  }
}