get:
  summary: List All Users
  description: Get a list of users.
  operationId: listUsers
  tags:
    - Users
  parameters:
    - $ref: ../components/parameters/max.yaml
    - $ref: ../components/parameters/offset.yaml
    - $ref: ../components/parameters/sort.yaml
    - $ref: ../components/parameters/direction.yaml
    - $ref: ../components/parameters/phrase.yaml
    - $ref: ../components/parameters/username.yaml
    - $ref: ../components/parameters/email.yaml
    - $ref: ../components/parameters/firstName.yaml
    - $ref: ../components/parameters/roleId.yaml
    - $ref: ../components/parameters/role.yaml
    - $ref: ../components/parameters/accountId.yaml
    - $ref: ../components/parameters/global.yaml
  responses:
    '200':
      description: Array of Users
      content:
        application/json:
          schema:
            allOf:
            - type: object
              properties:
                users:
                  type: array
                  items:
                    $ref: ../components/schemas/user.yaml
            - $ref: ../components/schemas/meta.yaml
            - $ref: ../components/schemas/global.yaml
          examples:
            Users Response:
              value:
                $ref: ../components/examples/users.json
    '4XX':
      $ref: ../components/responses/4xx.yaml
    '5XX':
      $ref: ../components/responses/5xx.yaml
post:
  summary: Create a New User
  description: Create a new user.
  operationId: addUsers
  tags:
    - Users
  parameters:
    - name: accountId
      in: query
      description: Tenant ID, create user in a sub tenant account instead of your own.
      schema:
        type: integer
        format: int64
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required:
            - user
          properties:
            user:
              type: object
              description: Payload for creating a new user
              required:
                - name
                - roles
              properties:
                firstName:
                  type: string
                  description: First Name
                  example: John
                lastName:
                  type: string
                  description: Last Name
                  example: Smith
                username:
                  type: string
                  description: Username (unique per tenant).
                  example: jsmith
                email:
                  type: string
                  description: Email address
                  example: jsmith@email.com
                password:
                  type: string
                  format: password
                  description: Password
                  example: Passw0rd!
                roles:
                  type: array
                  description: List of Roles
                  items:
                    $ref: ../components/schemas/ReferenceObject.yaml
  responses:
    '200':
      description: User Object
      content:
        application/json:
          schema:
            allOf:
            - type: object
              properties:
                user:
                  $ref: ../components/schemas/user.yaml
            - $ref: ../components/schemas/200-success.yaml
          examples:
            Create User Response:
              value:
                $ref: ../components/examples/userSuccess.json
    '4XX':
      $ref: ../components/responses/4xx.yaml
    '5XX':
      $ref: ../components/responses/5xx.yaml