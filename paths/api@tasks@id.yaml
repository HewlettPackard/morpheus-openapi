get:
  summary: Retrieves a Specific Task
  description: |
    Retrieves a specific task.
  operationId: getTasks
  tags:
    - Automation
  parameters:
    - $ref: ../components/parameters/id-path.yaml
  responses:
    '200':
      description: Successful Request
      content:
        application/json:
          schema:
            allOf:
            - type: object
              properties:
                task:
                  oneOf:
                  - $ref: ../components/schemas/taskAnsiblePlaybookConfig.yaml
                  - $ref: ../components/schemas/taskAnsibleTowerConfig.yaml
                  - $ref: ../components/schemas/taskChefBootstrapConfig.yaml
                  - $ref: ../components/schemas/taskEmailConfig.yaml
                  - $ref: ../components/schemas/taskGroovyConfig.yaml
                  - $ref: ../components/schemas/taskHttpConfig.yaml
                  - $ref: ../components/schemas/taskJavaConfig.yaml
                  - $ref: ../components/schemas/taskJrubyConfig.yaml
                  - $ref: ../components/schemas/taskLibraryScriptConfig.yaml
                  - $ref: ../components/schemas/taskLibraryTemplateConfig.yaml
                  - $ref: ../components/schemas/taskPowershellConfig.yaml
                  - $ref: ../components/schemas/taskPuppetConfig.yaml
                  - $ref: ../components/schemas/taskPythonConfig.yaml
                  - $ref: ../components/schemas/taskRestartConfig.yaml
                  - $ref: ../components/schemas/taskShellConfig.yaml
                  - $ref: ../components/schemas/taskVroConfig.yaml
                  - $ref: ../components/schemas/taskWriteAttributesConfig.yaml
          examples:
            Task Response - Get Ansible Playbook:
              value:
                $ref: ../components/examples/taskAnsiblePlaybook.json
            Task Response - Get Ansible Tower:
              value:
                $ref: ../components/examples/taskAnsibleTower.json
            Task Response - Get Chef Bootstrap:
              value:
                $ref: ../components/examples/taskChefBootstrap.json
            Task Response - Get Email:
              value:
                $ref: ../components/examples/taskEmail.json
            Task Response - Get Groovy:
              value:
                $ref: ../components/examples/taskGroovy.json
            Task Response - Get HTTP:
              value:
                $ref: ../components/examples/taskHttp.json
            Task Response - Get Java:
              value:
                $ref: ../components/examples/taskJava.json
            Task Response - Get JRuby:
              value:
                $ref: ../components/examples/taskJruby.json
            Task Response - Get Library Script:
              value:
                $ref: ../components/examples/taskLibraryScript.json
            Task Response - Get Library Template:
              value:
                $ref: ../components/examples/taskLibraryTemplate.json
            Task Response - Get PowerShell:
              value:
                $ref: ../components/examples/taskPowershell.json
            Task Response - Get Puppet:
              value:
                $ref: ../components/examples/taskPuppet.json
            Task Response - Get Python:
              value:
                $ref: ../components/examples/taskPython.json
            Task Response - Get Restart:
              value:
                $ref: ../components/examples/taskRestart.json
            Task Response - Get Shell:
              value:
                $ref: ../components/examples/taskShell.json
            Task Response - Get vRO:
              value:
                $ref: ../components/examples/taskVro.json
            Task Response - Get Write Attributes:
              value:
                $ref: ../components/examples/taskWriteAttributes.json
    '4XX':
      $ref: ../components/responses/4xx.yaml
    '5XX':
      $ref: ../components/responses/5xx.yaml
put:
  summary: Updates a Task
  description: |
    Updates a task.
  operationId: updateTasks
  tags:
    - Automation
  parameters:
    - $ref: ../components/parameters/id-path.yaml
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required:
            - task
          properties:
            task:
              type: object
              properties:
                name: 
                  type: string
                  description: A unique name for the task
                  example: Sample Task
                code:
                  type: string
                  description: A unique code for the task
                  example: aTaskCode
                visibility: 
                  type: string
                  description: Visibility
                  default: private
                taskType:
                  type: object
                  required:
                    - code
                  properties: 
                    code:
                      type: string
                      description: The type of task
                      enum:
                        - ansibleTask
                        - ansibleTowerTask
                        - chefTask
                        - email
                        - groovyTask
                        - httpTask
                        - javascriptTask
                        - jrubyTask
                        - containerScript
                        - containerTemplate
                        - localScript
                        - winrmTask
                        - puppetTask
                        - jythonTask
                        - restartTask
                        - script
                        - sshTask
                        - vro
                        - writeAttributes
                labels:
                  type: array
                  description: An array of Category labels for filtering
                  items: 
                    type: string
                taskOptions:
                  type: object
                  description: Map of options specific to each `task type`. eg. script
                resultType:
                  type: string
                  nullable: true
                  enum: 
                    - exitCode
                    - keyValue
                    - json
                executeTarget:
                  type: string
                  description: |
                    The execution target. eg. local,remote,resource. The default value varies by task type.
                  enum: 
                    - local
                    - remote
                    - resource
                retryable:
                  type: boolean
                  description: If the task should be retried or not.
                  default: false
                retryCount:
                  type: integer
                  description: The number of times to retry.
                retryDelaySeconds:
                  type: number
                  description: The delay, between retries.
                file:
                  type: object
                  description: |
                    File, object specifying type and content, see File Object. This is required for task types that expect a script, having scriptable:true and an optionType of `type:"file-content"`.
                  required: 
                    - sourceType
                  properties: 
                    sourceType:
                      type: string
                      description: File Source i.e. `local`, `repository`, `url`. Default is `local`.
                      enum:
                        - local
                        - repository
                        - url
                      default: local
                    content:
                      type: string
                      description: File content, the script text. Only required when sourceType is `local`.
                    contentPath:
                      type: string
                      description: Content Path, the repo file location or url. Required when sourceType is `repository` or `url`.
                    contentRef:
                      type: string
                      description: Content Ref, the branch/tag. Only used when sourceType is `repository`.
                    repository:
                      type: object
                      properties: 
                        id:
                          type: integer
                          format: int64
                          description: Code Repository ID, required for type `repository`. Use `/api/options/codeRepositories` to see available repositories.
                credential:
                  description: |
                    Map containing Credential ID or the default {"type": "local"} 
                    which means use the values set in the local task options username and password instead of associating a credential.
                  oneOf: 
                    - type: object
                      properties: 
                        type:
                          type: string
                          enum:
                            - local                              
                    - type: object
                      properties:
                        id:
                          type: integer
                          format: int64
  responses:
    '200':
      description: Successful Request
      content:
        application/json:
          schema:
            allOf:
            - type: object
              properties:
                task:
                  oneOf:
                  - $ref: ../components/schemas/taskAnsiblePlaybookConfig.yaml
                  - $ref: ../components/schemas/taskAnsibleTowerConfig.yaml
                  - $ref: ../components/schemas/taskChefBootstrapConfig.yaml
                  - $ref: ../components/schemas/taskEmailConfig.yaml
                  - $ref: ../components/schemas/taskGroovyConfig.yaml
                  - $ref: ../components/schemas/taskHttpConfig.yaml
                  - $ref: ../components/schemas/taskJavaConfig.yaml
                  - $ref: ../components/schemas/taskJrubyConfig.yaml
                  - $ref: ../components/schemas/taskLibraryScriptConfig.yaml
                  - $ref: ../components/schemas/taskLibraryTemplateConfig.yaml
                  - $ref: ../components/schemas/taskPowershellConfig.yaml
                  - $ref: ../components/schemas/taskPuppetConfig.yaml
                  - $ref: ../components/schemas/taskPythonConfig.yaml
                  - $ref: ../components/schemas/taskRestartConfig.yaml
                  - $ref: ../components/schemas/taskShellConfig.yaml
                  - $ref: ../components/schemas/taskVroConfig.yaml
                  - $ref: ../components/schemas/taskWriteAttributesConfig.yaml
            - $ref: ../components/schemas/200-success.yaml
          examples:
            Task Response - Update Ansible Playbook:
              value:
                $ref: ../components/examples/taskAnsiblePlaybookSuccess.json
            Task Response - Update Ansible Tower:
              value:
                $ref: ../components/examples/taskAnsibleTowerSuccess.json
            Task Response - Update Chef Bootstrap:
              value:
                $ref: ../components/examples/taskChefBootstrapSuccess.json
            Task Response - Update Email:
              value:
                $ref: ../components/examples/taskEmailSuccess.json
            Task Response - Update Groovy:
              value:
                $ref: ../components/examples/taskGroovySuccess.json
            Task Response - Update HTTP:
              value:
                $ref: ../components/examples/taskHttpSuccess.json
            Task Response - Update Java:
              value:
                $ref: ../components/examples/taskJavaSuccess.json
            Task Response - Update JRuby:
              value:
                $ref: ../components/examples/taskJrubySuccess.json
            Task Response - Update Library Script:
              value:
                $ref: ../components/examples/taskLibraryScriptSuccess.json
            Task Response - Update Library Template:
              value:
                $ref: ../components/examples/taskLibraryTemplateSuccess.json
            Task Response - Update PowerShell:
              value:
                $ref: ../components/examples/taskPowershellSuccess.json
            Task Response - Update Puppet:
              value:
                $ref: ../components/examples/taskPuppetSuccess.json
            Task Response - Update Python:
              value:
                $ref: ../components/examples/taskPythonSuccess.json
            Task Response - Update Restart:
              value:
                $ref: ../components/examples/taskRestartSuccess.json
            Task Response - Update Shell:
              value:
                $ref: ../components/examples/taskShellSuccess.json
            Task Response - Update vRO:
              value:
                $ref: ../components/examples/taskVroSuccess.json
            Task Response - Update Write Attributes:
              value:
                $ref: ../components/examples/taskWriteAttributesSuccess.json
    '4XX':
      $ref: ../components/responses/4xx.yaml
    '5XX':
      $ref: ../components/responses/5xx.yaml
delete:
  summary: Deletes a Task
  description: |
    Deletes a specified task.
  operationId: removeTasks
  tags:
    - Automation
  parameters:
    - $ref: ../components/parameters/id-path.yaml
  responses:
    '200':
      description: Successful Request
      content:
        application/json:
          schema:
            $ref: ../components/schemas/200-success.yaml
    '4XX':
      $ref: ../components/responses/4xx.yaml
    '5XX':
      $ref: ../components/responses/5xx.yaml