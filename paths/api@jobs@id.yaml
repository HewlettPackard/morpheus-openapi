get:
  summary: Retrieves a Specific Job
  description: |
    Retrieves a specific job.
  operationId: getJobs
  tags:
    - Jobs
  parameters:
    - $ref: ../components/parameters/id-path.yaml
  responses:
    '200':
      description: Successful Request
      content:
        application/json:
          schema:
            allOf:
            - type: object
              properties:
                job:
                  anyOf:
                  - $ref: ../components/schemas/job.yaml
                  - $ref: ../components/schemas/jobTask.yaml
                  - $ref: ../components/schemas/jobWorkflow.yaml
          examples:
            Jobs Response - Generic:
              value:
                $ref: ../components/examples/job.json
            Jobs Response - Task Type:
              value:
                $ref: ../components/examples/jobTask.json
            Jobs Response - Workflow Type:
              value:
                $ref: ../components/examples/jobWorkflow.json
    '4XX':
      $ref: ../components/responses/4xx.yaml
    '5XX':
      $ref: ../components/responses/5xx.yaml
put:
  summary: Updates a Job
  description: |
    Updates a job.
  operationId: updateJobs
  tags:
    - Jobs
  parameters:
    - $ref: ../components/parameters/id-path.yaml
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required:
            - job
          properties:
            job:
              type: object
              properties:
                name: 
                  type: string
                  description: A name for the Job
                  example: Sample Job Name
                labels:
                  type: [ array, 'null' ]
                  description: Array of label strings, can be used for filtering.
                  items: 
                    type: string
                enabled:
                  type: boolean
                  description: Use this to set enabled state
                  default: true
                task:
                  type: [ object, 'null' ]
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 123
                workflow:
                  type: [ object, 'null' ]
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 123
                scanPath: 
                  type: [ string, 'null' ]
                  description: Scan Checklist. Only applies to type scap-package.
                  example: "/test_CentOS_Linux_7_Benchmark_v3/test_CentOS_Linux_7_Benchmark_v3.1.1-xccdf.xml"
                securityProfile: 
                  type: [ string, 'null' ]
                  description: Security Profile. Only applies to type scap-package.
                  example: "xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Server"
                targetType:
                  type: string
                  description: Target type where job will execute
                  enum:
                    - appliance
                    - instance
                    - instance-label
                    - server
                    - server-label
                targets:
                  type: [ array, 'null' ]
                  items:
                    type: object
                    properties:
                      refId:
                        type: integer
                        format: int64
                instanceLabel:
                  type: string
                  description: Instance Label. Only applicable if `targetType` is `instance-label`.
                serverLabel:
                  type: string
                  description: Server Label. Only applicable if `targetType` is `server-label`.
                scheduleMode:
                  oneOf:
                  - type: string
                    description: Job execution schedule type. Schedule `id`, `manual`, or `dateTime`
                    enum:
                      - manual
                      - dateTime
                  - type: integer
                    format: int64
                    example: 123
                customOptions:
                  type: object
                  description: Map of options to be used as values in the workflow tasks. These correspond to option types.
                customConfig:
                  type: string
                  description: Job custom configuration (String in JSON format)
                dateTime:
                  type: string
                  format: date-time
                  description: Date and Time to execute the job. Use UTC time in the format 2020-02-15T05:00:00Z. Required when scheduleMode is 'dateTime'.
                  example: '2020-02-15T05:00:00Z'
                run:
                  type: boolean
                  description: If true, executes job
  responses:
    '200':
      description: Successful Request
      content:
        application/json:
          schema:
            allOf:
            - type: object
              properties:
                job:
                  $ref: ../components/schemas/job.yaml
            - $ref: ../components/schemas/200-success.yaml
          examples:
            Jobs Response - Generic:
              value:
                $ref: ../components/examples/jobSuccess.json
            Jobs Response - Task Type:
              value:
                $ref: ../components/examples/jobTaskSuccess.json
            Jobs Response - Workflow Type:
              value:
                $ref: ../components/examples/jobWorkflowSuccess.json
    '4XX':
      $ref: ../components/responses/4xx.yaml
    '5XX':
      $ref: ../components/responses/5xx.yaml
delete:
  summary: Deletes a Job
  description: |
    Deletes a specified job.
  operationId: removeJobs
  tags:
    - Jobs
  parameters:
    - $ref: ../components/parameters/id-path.yaml
  responses:
    '200':
      description: Successful Request
      content:
        application/json:
          schema:
            $ref: ../components/schemas/200-success.yaml
    '4XX':
      $ref: ../components/responses/4xx.yaml
    '5XX':
      $ref: ../components/responses/5xx.yaml
