get:
  summary: Get a Specific Check Group
  description: Get details about a specific monitoring check group.
  operationId: getCheckGroups
  tags:
    - Checks
  parameters:
  - $ref: ../components/parameters/id-path.yaml
  responses:
    '200':
      description: Check Group Object
      content:
        application/json:
          schema:
            type: object
            properties:
              checkGroup:
                $ref: ../components/schemas/checkGroup.yaml
          examples:
            Check Group Response:
              value:
                $ref: ../components/examples/checkGroup.json
    '4XX':
      $ref: ../components/responses/4xx.yaml
    '5XX':
      $ref: ../components/responses/5xx.yaml
put:
  summary: Update Check Group
  description: Update an existing monitoring check group.
  operationId: updateCheckGroups
  tags:
    - Checks
  parameters:
  - $ref: ../components/parameters/id-path.yaml
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required:
            - checkGroup
          properties:
            checkGroup:
              type: object
              description: Payload for creating a new monitoring check group
              properties:
                name:
                  type: string
                  description: Unique name scoped to your account for the check group
                  example: My Check Group
                description:
                  type: string
                  description: Optional description field
                  example: My cool description
                minHappy:
                  type: integer
                  description: This specifies the minimum number of checks within the group that must be happy to keep the group from becoming unhealthy.
                  default: 1
                inUptime:
                  type: boolean
                  description: Used to determine if check should affect account wide availability calculations
                  default: true
                severity:
                  type: string
                  description: Determines the maximum severity level this group can incur on an incident when failing
                  default: critical
                  enum:
                    - info
                    - warning
                    - critical
                active:
                  type: boolean
                  description: Used to determine if check group is active
                  default: true
                checks:
                  type: array
                  items:
                    type: integer
  responses:
    '200':
      description: Check Group Object
      content:
        application/json:
          schema:
            allOf:
            - type: object
              properties:
                checkGroup:
                  $ref: ../components/schemas/checkGroup.yaml
            - $ref: ../components/schemas/200-success.yaml
          examples:
            Check Group Response:
              value:
                $ref: ../components/examples/checkGroupSuccess.json
    '4XX':
      $ref: ../components/responses/4xx.yaml
    '5XX':
      $ref: ../components/responses/5xx.yaml
delete:
  summary: Delete a Specific Check Group
  description: Delete an existing monitoring check group.
  operationId: deleteCheckGroups
  tags:
    - Checks
  parameters:
  - $ref: ../components/parameters/id-path.yaml
  responses:
    '200':
      description: Success Object
      content:
        application/json:
          schema:
            $ref: ../components/schemas/200-success.yaml
          examples:
            Check Group Response:
              value:
                $ref: ../components/examples/success.json
    '4XX':
      $ref: ../components/responses/4xx.yaml
    '5XX':
      $ref: ../components/responses/5xx.yaml