get:
  summary: Retrieves a Specific Task
  description: |
    Retrieves a specific task.
  operationId: getTasks
  tags:
    - Automation
  parameters:
    - $ref: ../components/parameters/id-path.yaml
  responses:
    '200':
      description: Successful Request
      content:
        application/json:
          schema:
            allOf:
            - type: object
              properties:
                task:
                  oneOf:
                  - $ref: ../components/schemas/taskAnsiblePlaybookConfig.yaml
                  - $ref: ../components/schemas/taskAnsibleTowerConfig.yaml
                  - $ref: ../components/schemas/taskChefBootstrapConfig.yaml
                  - $ref: ../components/schemas/taskEmailConfig.yaml
                  - $ref: ../components/schemas/taskGroovyConfig.yaml
                  - $ref: ../components/schemas/taskHttpConfig.yaml
                  - $ref: ../components/schemas/taskJavaConfig.yaml
                  - $ref: ../components/schemas/taskJrubyConfig.yaml
                  - $ref: ../components/schemas/taskLibraryScriptConfig.yaml
                  - $ref: ../components/schemas/taskLibraryTemplateConfig.yaml
                  - $ref: ../components/schemas/taskPowershellConfig.yaml
                  - $ref: ../components/schemas/taskPuppetConfig.yaml
                  - $ref: ../components/schemas/taskPythonConfig.yaml
                  - $ref: ../components/schemas/taskRestartConfig.yaml
                  - $ref: ../components/schemas/taskShellConfig.yaml
                  - $ref: ../components/schemas/taskVroConfig.yaml
                  - $ref: ../components/schemas/taskWriteAttributesConfig.yaml
          examples:
            Policy Response - Approve Delete:
              value:
                $ref: ../components/examples/policyApproveDelete.json
            Policy Response - Approve Provision:
              value:
                $ref: ../components/examples/policyApproveProvision.json
            Policy Response - Approve Reconfigure:
              value:
                $ref: ../components/examples/policyApproveReconfigure.json
            Policy Response - Backup Creation:
              value:
                $ref: ../components/examples/policyBackupCreation.json
            Policy Response - Backup Targets:
              value:
                $ref: ../components/examples/policyBackupTargets.json
            Policy Response - Budget:
              value:
                $ref: ../components/examples/policyBudget.json
            Policy Response - Cluster Resource Name:
              value:
                $ref: ../components/examples/policyClusterResourceName.json
            Policy Response - Cypher Access:
              value:
                $ref: ../components/examples/policyCypherAccess.json
            Policy Response - Delayed Delete:
              value:
                $ref: ../components/examples/policyDelayedDelete.json
            Policy Response - Expiration:
              value:
                $ref: ../components/examples/policyExpiration.json
            Policy Response - File Share Storage Quota:
              value:
                $ref: ../components/examples/policyFileShareStorageQuota.json
            Policy Response - Hostname:
              value:
                $ref: ../components/examples/policyHostname.json
            Policy Response - Instance Name:
              value:
                $ref: ../components/examples/policyInstance.json
            Policy Response - Max Containers:
              value:
                $ref: ../components/examples/policyMaxContainers.json
            Policy Response - Max Cores:
              value:
                $ref: ../components/examples/policyMaxCores.json
            Policy Response - Max Hosts:
              value:
                $ref: ../components/examples/policyMaxHosts.json
            Policy Response - Max Load Balancers:
              value:
                $ref: ../components/examples/policyMaxLoadBalancers.json
            Policy Response - Max Memory:
              value:
                $ref: ../components/examples/policyMaxMemory.json
            Policy Response - Max Pool Members:
              value:
                $ref: ../components/examples/policyMaxPoolMembers.json
            Policy Response - Max Storage:
              value:
                $ref: ../components/examples/policyMaxStorage.json
            Policy Response - Max Virtual Servers:
              value:
                $ref: ../components/examples/policyMaxVirtualServers.json
            Policy Response - Max VMs:
              value:
                $ref: ../components/examples/policyMaxVMs.json
            Policy Response - Message of the Day:
              value:
                $ref: ../components/examples/policyMOTD.json
            Policy Response - Network Quota:
              value:
                $ref: ../components/examples/policyNetworkQuota.json
            Policy Response - Object Storage Quota:
              value:
                $ref: ../components/examples/policyStorageQuota.json
            Policy Response - Power Schedule:
              value:
                $ref: ../components/examples/policyPowerSchedule.json
            Policy Response - Router Quota:
              value:
                $ref: ../components/examples/policyRouterQuota.json
            Policy Response - Shutdown:
              value:
                $ref: ../components/examples/policyShutdown.json
            Policy Response - Storage Server Quota:
              value:
                $ref: ../components/examples/policyStorageServerQuota.json
            Policy Response - Tags:
              value:
                $ref: ../components/examples/policyTags.json
            Policy Response - User Creation:
              value:
                $ref: ../components/examples/policyUserCreation.json
            Policy Response - User Group Creation:
              value:
                $ref: ../components/examples/policyUserGroupCreation.json
            Policy Response - Workflow:
              value:
                $ref: ../components/examples/policyWorkflow.json
    '4XX':
      $ref: ../components/responses/4xx.yaml
    '5XX':
      $ref: ../components/responses/5xx.yaml
put:
  summary: Updates a Task
  description: |
    Updates a task.
  operationId: updateTasks
  tags:
    - Automation
  parameters:
    - $ref: ../components/parameters/id-path.yaml
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required:
            - task
          properties:
            task:
              type: object
              properties:
                name: 
                  type: string
                  description: A unique name for the task
                  example: Sample Task
                code:
                  type: string
                  description: A unique code for the task
                  example: aTaskCode
                taskType:
                  type: object
                  required:
                    - code
                  properties: 
                    code:
                      type: string
                      description: The type of task
                      enum:
                        - ansibleTask
                        - ansibleTowerTask
                        - chefTask
                        - email
                        - groovyTask
                        - httpTask
                        - javascriptTask
                        - jrubyTask
                        - containerScript
                        - containerTemplate
                        - localScript
                        - winrmTask
                        - puppetTask
                        - jythonTask
                        - restartTask
                        - script
                        - sshTask
                        - vro
                        - writeAttributes
                    labels:
                      type: array
                      description: An array of Category labels for filtering
                      items: 
                        type: string
                    taskOptions:
                      type: object
                      description: Map of options specific to each `task type`. eg. script
                    resultType:
                      type: string
                      nullable: true
                      enum: 
                        - exitCode
                        - keyValue
                        - json
                    executeTarget:
                      type: string
                      description: |
                        The execution target. eg. local,remote,resource. The default value varies by task type.
                      enum: 
                        - local
                        - remote
                        - resource
                    retryable:
                      type: boolean
                      description: If the task should be retried or not.
                      default: false
                    retryCount:
                      type: integer
                      description: The number of times to retry.
                    retryDelaySeconds:
                      type: number
                      description: The delay, between retries.
                    file:
                      type: object
                      description: |
                        File, object specifying type and content, see File Object.
                        This is required for task types that expect a script, having scriptable:true and an optionType of type:"file-content".
                    credential:
                      description: |
                        Map containing Credential ID or the default {"type": "local"} 
                        which means use the values set in the local task options username and password instead of associating a credential.
                      oneOf: 
                        - type: object
                          properties: 
                            type:
                              type: string
                              enum:
                                - local                              
                        - type: object
                          properties:
                            id:
                              type: integer
                              format: int64
  responses:
    '200':
      description: Successful Request
      content:
        application/json:
          schema:
            allOf:
            - type: object
              properties:
                task:
                  oneOf:
                  - $ref: ../components/schemas/taskAnsiblePlaybookConfig.yaml
                  - $ref: ../components/schemas/taskAnsibleTowerConfig.yaml
                  - $ref: ../components/schemas/taskChefBootstrapConfig.yaml
                  - $ref: ../components/schemas/taskEmailConfig.yaml
                  - $ref: ../components/schemas/taskGroovyConfig.yaml
                  - $ref: ../components/schemas/taskHttpConfig.yaml
                  - $ref: ../components/schemas/taskJavaConfig.yaml
                  - $ref: ../components/schemas/taskJrubyConfig.yaml
                  - $ref: ../components/schemas/taskLibraryScriptConfig.yaml
                  - $ref: ../components/schemas/taskLibraryTemplateConfig.yaml
                  - $ref: ../components/schemas/taskPowershellConfig.yaml
                  - $ref: ../components/schemas/taskPuppetConfig.yaml
                  - $ref: ../components/schemas/taskPythonConfig.yaml
                  - $ref: ../components/schemas/taskRestartConfig.yaml
                  - $ref: ../components/schemas/taskShellConfig.yaml
                  - $ref: ../components/schemas/taskVroConfig.yaml
                  - $ref: ../components/schemas/taskWriteAttributesConfig.yaml
            - $ref: ../components/schemas/200-success.yaml
          examples:
            Task Response - Update Ansible Playbook:
              value:
                $ref: ../components/examples/taskAnsiblePlaybookSuccess.json
            Task Response - Update Ansible Tower:
              value:
                $ref: ../components/examples/taskAnsibleTowerSuccess.json
            Task Response - Update Chef Bootstrap:
              value:
                $ref: ../components/examples/taskChefBootstrapSuccess.json
            Task Response - Update Email:
              value:
                $ref: ../components/examples/taskEmailSuccess.json
            Task Response - Update Groovy:
              value:
                $ref: ../components/examples/taskGroovySuccess.json
            Task Response - Update HTTP:
              value:
                $ref: ../components/examples/taskHttpSuccess.json
            Task Response - Update Java:
              value:
                $ref: ../components/examples/taskJavaSuccess.json
            Task Response - Update JRuby:
              value:
                $ref: ../components/examples/taskJrubySuccess.json
            Task Response - Update Library Script:
              value:
                $ref: ../components/examples/taskLibraryScriptSuccess.json
            Task Response - Update Library Template:
              value:
                $ref: ../components/examples/taskLibraryTemplateSuccess.json
            Task Response - Update PowerShell:
              value:
                $ref: ../components/examples/taskPowershellSuccess.json
            Task Response - Update Puppet:
              value:
                $ref: ../components/examples/taskPuppetSuccess.json
            Task Response - Update Python:
              value:
                $ref: ../components/examples/taskPythonSuccess.json
            Task Response - Update Restart:
              value:
                $ref: ../components/examples/taskRestartSuccess.json
            Task Response - Update Shell:
              value:
                $ref: ../components/examples/taskShellSuccess.json
            Task Response - Update vRO:
              value:
                $ref: ../components/examples/taskVroSuccess.json
            Task Response - Update Write Attributes:
              value:
                $ref: ../components/examples/taskWriteAttributesSuccess.json
    '4XX':
      $ref: ../components/responses/4xx.yaml
    '5XX':
      $ref: ../components/responses/5xx.yaml
delete:
  summary: Deletes a Task
  description: |
    Deletes a specified task.
  operationId: removeTasks
  tags:
    - Automation
  parameters:
    - $ref: ../components/parameters/id-path.yaml
  responses:
    '200':
      description: Successful Request
      content:
        application/json:
          schema:
            $ref: ../components/schemas/200-success.yaml
    '4XX':
      $ref: ../components/responses/4xx.yaml
    '5XX':
      $ref: ../components/responses/5xx.yaml