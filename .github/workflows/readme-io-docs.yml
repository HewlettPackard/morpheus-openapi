name: Sync Docs to ReadMe
on: [workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install python-frontmatter
      # - name: get README_VERSION_ID
      #   env:
      #     IDJSON: ${{ secrets.README_ID_JSON }}
      #   run: |
      #     echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
      #     README_VERSION_ID=$(python3 -c 'import json,os;print(json.loads(os.environ.get("IDJSON"))[os.environ.get("GITHUB_REF_NAME")])')
      #     idsize=${#README_VERSION_ID}
      #     if [ $idsize -lt 6 ]; then
      #       echo "No ID found"
      #       exit 1
      #     fi
      #     echo "::add-mask::$README_VERSION_ID"
      #     echo "README_VERSION_ID=${README_VERSION_ID}" >> $GITHUB_ENV
      - name: Install rdme client and grab category IDs
        run: |
          npm install rdme@7.5.0
          echo "rdme installed fine"
          npx rdme categories --key ${{ secrets.README_TOKEN }} --version $GITHUB_REF_NAME 1>cats.json
          sed -i -n '/^\[$/,$p' cats.json
      - uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import frontmatter
            import os
            import json

            ### Get category ID from json
            jsonfile = 'cats.json'
            category_id = None
            with open(jsonfile) as jf:
                allcats = json.load(jf)
                for section in allcats:
                    if section['type'] == "guide":
                        category_id = section['id']

            if category_id is None:
                print("Could not find category ID")
                quit(1)

            ### Modify frontmatter with category ID
            dir = 'docs'
            for fn in os.listdir(dir):
                f = os.path.join(dir, fn)
                if os.path.isfile(f):
                    with open(f) as mdf:
                        y = frontmatter.load(mdf)
                        y.metadata['category'] = "cat id"
                        newdata = frontmatter.dumps(y)
                    with open(f, 'w') as newmdf:
                        newmdf.write(newdata)
      - run: |
          npx rdme docs docs/ --key ${{ secrets.README_TOKEN }} --dryRun